@{
    ViewData["Title"] = "Local Server Console";
}

<script>

    let previousLineStart = 0;

    async function updateConsole(restart) {

        const directorySelect = document.getElementById("directorySelect");
        const consoleLog = document.getElementById("consoleLog");

        const serverPath = directorySelect.value;
        if (serverPath != "null") {
            try {
                const response = await fetch(
                    `/api/ServerConsole/?serverPath=${serverPath}&lineStart=${previousLineStart}`
                );
                if (response.ok) {
                    const data = await response.json();

                    let newData = data["log"];
                    previousLineStart = data["newLineStart"];

                    // Replace < >
                    newData = newData.replace(/\</g,"&lt;");
                    newData = newData.replace(/\>/g,"&gt;");

                    // Replace newlines with <br>
                    newData = newData.replace(/(?:\r\n|\r|\n)/g, "<br>");

                    // Surround timestamps with spans
                    newData = newData.replace(
                        /\[[0-9]{2}:[0-9]{2}:[0-9]{2}\]/g, 
                        "<span class=\"logTimestamp\">$&</span>"
                    );

                    // Surround sources with spans
                    newData = newData.replace(
                        /\[[A-z| |\-|0-9]*\/[A-z| |\-|0-9]*\]/g, 
                        "<span class=\"logSource\">$&</span>"
                    );

                    consoleLog.insertAdjacentHTML("beforeend", newData);

                } else {
                    const responseText = await response.text();
                    consoleLog.innerHTML = responseText.replace(/(?:\r\n|\r|\n)/g, "<br>");
                }
            } catch (error) {
                console.error("Error: " + error);
            }
        }
        if (restart)
            setTimeout(() => { updateConsole(true); }, 1000);
    }
    document.addEventListener("DOMContentLoaded", () => { updateConsole(true); });

</script>

<h1>@ViewData["Title"]</h1>

<select class="form-select" id="directorySelect" onchange="updateConsole(false)">
  <option selected disabled value="null">Choose a Server Directory</option>
  <option value="/home/jacobhofer/MinecraftTest">Test Directory 1</option>
  <option value="server/dir/2">server/dir/2</option>
  <option value="server/dir/3">server/dir/3</option>
</select>

<div id="console" class="bg-dark text-white">
    <span class="logLine logStart">> START OF LOG</span><br>
    <p id="consoleLog" class="logLine">
    </p>

</div>
<div class="input-group">
    <input id="consoleInput" class="form-control bg-dark text-white" type="text" placeholder="Enter a command here"></input>
</div>

<!-- Extra spans so that ASP.NET doesn't crap out on me -->
<span class="logTimestamp" style="display: none;"></span>
<span class="logSource" style="display: none;"></span>

